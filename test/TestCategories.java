/**
 * Created by employee on 7/21/16.
 */

import com.interlink.CategoryDAO;
import com.interlink.ConnectionFactory;
import org.dbunit.IDatabaseTester;
import org.dbunit.JdbcDatabaseTester;
import org.dbunit.dataset.IDataSet;
import org.dbunit.dataset.xml.FlatXmlDataSetBuilder;
import org.dbunit.operation.DatabaseOperation;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.StringReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Arrays;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

public class TestCategories {

    private static IDatabaseTester databaseTester;
    private static CategoryDAO categoryDAO;
    private static Connection connection;


    @BeforeClass
    public static void init() throws Exception {
        databaseTester = new JdbcDatabaseTester(org.hsqldb.jdbcDriver.class
                .getName(), "jdbc:hsqldb:file:~/Desktop/shop/");
        createTablesSinceDbUnitDoesNot(databaseTester.getConnection().getConnection());
        String inputXml = "<dataset>" + "    <Categories NAME=\"phone\" />"
                + "</dataset>";
        IDataSet dataSet = new FlatXmlDataSetBuilder().build(new StringReader(inputXml));
        databaseTester.setDataSet(dataSet);
        databaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);
        databaseTester.setTearDownOperation(DatabaseOperation.DELETE_ALL);
        databaseTester.onSetup();
        connection = databaseTester.getConnection().getConnection();
        categoryDAO = new CategoryDAO(new ConnectionFactory() {
            public Connection getConnection() {
                return connection;
            }
        });

    }

    private static void createTablesSinceDbUnitDoesNot(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement("CREATE TABLE Categories " +
                "(id INT GENERATED BY DEFAULT AS IDENTITY, NAME VARCHAR(255), primary key(id));");
        statement.execute();
        statement.close();
    }

    @Test
    public void testGetCategoryNames() throws SQLException {
        assertThat(categoryDAO.getCategoryNames(), is(Arrays.asList("phone")));
    }

    @AfterClass
    public static void cleanUp() throws Exception {
        categoryDAO = null;
        databaseTester.onTearDown();
        databaseTester = null;

    }


}
