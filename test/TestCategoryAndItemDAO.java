/**
 * Created by employee on 7/21/16.
 */

import com.interlink.*;
import org.junit.BeforeClass;
import org.junit.Test;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

public class TestCategoryAndItemDAO {

    private static CategoryDAO categoryDAO;
    private static ItemDAO itemDAO;
    private static Connection connection;


    @BeforeClass
    public static void init() throws Exception {
        connection = DriverManager.getConnection("jdbc:hsqldb:mem:aname", "", "");
        createTablesSinceDbUnitDoesNot(connection);
        prepareConnectionFactory();

    }

    private static void prepareConnectionFactory() {
        ConnectionFactory connectionFactory = new ConnectionFactory() {
            public Connection getConnection() {
                return connection;
            }
        };
        categoryDAO = new CategoryDAO(connectionFactory);
    }


    private static void createTablesSinceDbUnitDoesNot(Connection connection)
            throws SQLException {
        PreparedStatement statement = connection.prepareStatement("CREATE TABLE Categories " +
                "(id INT GENERATED BY DEFAULT AS IDENTITY, NAME VARCHAR(255), primary key(id));");
        statement.execute();
        statement.close();
        statement = connection.prepareStatement("CREATE TABLE Items (id INT GENERATED BY DEFAULT AS IDENTITY," +
                "name VARCHAR(255), number int, price decimal(7,2), category_id int, primary key(id));");
        statement.execute();
        statement.close();
    }

    @Test
    public void testGetAndAddCategory() throws Exception {
        Category categoryFirst = new Category();
        categoryFirst.setName("phone");
        categoryDAO.put(categoryFirst);
        Category categorySecond = new Category();
        categorySecond.setName("blender");
        categoryDAO.put(categorySecond);
        List<Category> expected = Arrays.asList(categoryFirst, categorySecond);
        assertThat(categoryDAO.get(), is(expected));
    }


    @Test
    public void testGetAndAddItem() throws Exception {
        Item item = new Item();
        item.setName("Nokia");
    }
}
